// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.Canvas = (function(_super) {

    __extends(Canvas, _super);

    function Canvas() {
      return Canvas.__super__.constructor.apply(this, arguments);
    }

    Canvas.prototype.initialize = function(id, context_type, width, height) {
      var $canvas, document_canvas, the_height, the_width;
      if (id == null) {
        id = 'canvas';
      }
      if (context_type == null) {
        context_type = '2d';
      }
      document_canvas = document.getElementById(id);
      if (!document_canvas) {
        document_canvas = document.getElementByTagName('canvas');
      }
      $canvas = $("#" + id);
      if (!$canvas) {
        $canvas = $('canvas').first();
      }
      this.context = document_canvas.getContext(context_type);
      the_width = width ? width : $canvas.attr('width');
      the_height = height ? height : $canvas.attr('height');
      return this.size = {
        width: the_width,
        height: the_height
      };
    };

    return Canvas;

  })(Object);

}).call(this);
